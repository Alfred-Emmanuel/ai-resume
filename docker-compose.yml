version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: resume-postgres
    restart: always
    # Local dev: values come from .env; Prod (GCP): inject env vars via your deployment
    env_file:
      - apps/backend/.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-resume_app}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: resume-redis
    restart: always
    ports:
      - "6379:6379"

  minio:
    image: minio/minio
    container_name: resume-minio
    command: server /data --console-address ":9001"
    # Local dev: values come from .env; Prod (GCP): inject env vars via your deployment
    env_file:
      - apps/backend/.env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # MinIO web console
    volumes:
      - minio_data:/data

  backend:
    image: ealfred/ai-resume-backend:latest
    container_name: resume-backend
    restart: always
    depends_on:
      - postgres
      - redis
      - minio
    env_file:
      - apps/backend/.env
    environment:
      PORT: ${PORT:-4000}
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-postgres}
      DB_PASS: ${DB_PASS:-postgres}
      DB_NAME: ${DB_NAME:-ai-resume}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT:-http://minio:9000}
      JWT_SECRET: ${JWT_SECRET:-changeme}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "4000:4000"

volumes:
  pgdata:
  minio_data:
